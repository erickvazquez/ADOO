/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package odontograma;

import Controlador.Odonto;
import Controlador.Paciente;
import com.google.gson.Gson;
import java.awt.Point;
import java.awt.event.MouseEvent;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.table.DefaultTableModel;

public class OdontogramaVista extends javax.swing.JFrame {
    
    public Odonto OD =new Odonto();
    public Paciente Pa;
    private String nombre = "Prueba";
    public String head[] = {"Diente", "Problema", "Lado", "Comentarios"};
    public DefaultTableModel model = new DefaultTableModel(new String[0][0], head);
    public Dentadura A = new Dentadura();
    public int actualiza=0;
    
    public OdontogramaVista(Paciente P) throws ClassNotFoundException, InstantiationException, IllegalAccessException, UnsupportedLookAndFeelException, SQLException {
        Pa=P;
        UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        initComponents();
        NOMBREPACIENTE.setText(nombre);
        jTable1.setModel(model);
        setLocationRelativeTo(null);
        this.setTitle("Dental Toolkit: Odontograma de "+P.Nombre);
        NOMBREPACIENTE.setText(P.Nombre+" "+P.Apellidos);
        RecuperarOdontograma();
    }
    
    public void RecuperarOdontograma() throws SQLException{
        Gson gson = new Gson();
        String br=OD.Recuperar(Pa.Correo);
        if(!br.equals("")){
            Dentadura B = gson.fromJson(br, Dentadura.class);
            B.VerDentadura();
            Reconstruir(B);
            actualiza=1;
        }
    }
    
    public void Reconstruir(Dentadura B){
        for(int i = 0;i<B.Dentadura.size();i++){
            int numD = B.Dentadura.get(i).NumDiente;
            String strD = String.valueOf(numD);
            String caso[] = {strD,B.Dentadura.get(i).Problema,B.Dentadura.get(i).Lado,B.Dentadura.get(i).Comentarios};
            model.addRow(caso);
            A=B;
        }
    }
    
    
    
    public static boolean between(int i, int minValueInclusive, int maxValueInclusive) {
        return (i >= minValueInclusive && i <= maxValueInclusive);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        lblExpediente = new javax.swing.JPanel();
        lblPaciente = new javax.swing.JLabel();
        NOMBREPACIENTE = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        txtNumeroDeDiente = new javax.swing.JTextField();
        lblProblema = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        lblComentarios = new javax.swing.JLabel();
        btnAgregar = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btnCancelar = new javax.swing.JButton();
        btnInsertar = new javax.swing.JButton();
        btnLimpiar = new javax.swing.JButton();
        btnLimpiar1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/dentegra/manager/images/hc_grafica_odontograma.png"))); // NOI18N
        jLabel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(32, 32, 32)
                .add(jLabel1)
                .addContainerGap(33, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(jLabel1)
                .add(0, 12, Short.MAX_VALUE))
        );

        lblExpediente.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lblPaciente.setText("Paciente:");

        NOMBREPACIENTE.setText("#");

        org.jdesktop.layout.GroupLayout lblExpedienteLayout = new org.jdesktop.layout.GroupLayout(lblExpediente);
        lblExpediente.setLayout(lblExpedienteLayout);
        lblExpedienteLayout.setHorizontalGroup(
            lblExpedienteLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(lblExpedienteLayout.createSequentialGroup()
                .addContainerGap()
                .add(lblPaciente)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(NOMBREPACIENTE)
                .addContainerGap(254, Short.MAX_VALUE))
        );
        lblExpedienteLayout.setVerticalGroup(
            lblExpedienteLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(lblExpedienteLayout.createSequentialGroup()
                .add(43, 43, 43)
                .add(lblExpedienteLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(lblPaciente)
                    .add(NOMBREPACIENTE))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel3.setText("Numero de diente");

        txtNumeroDeDiente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNumeroDeDienteActionPerformed(evt);
            }
        });

        lblProblema.setText("Problema");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Caries", "Diente Incluido", "Superficie sellada", "Corona adaptada", "Nucleo", "Amalgama", "Sin erupcionar", "Sellante indicado", "Corona desadaptada", "Pontico", "Ausente", "Endodoncia realizada", "Erosion", "Protesis removible", "Diente sano", "Exodoncia simple indicada", "Endodoncia a realizar", "Resina", "Resto radicular", "Implante" }));

        jLabel4.setText("Lado");

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Centro", "Izquierda", "Derecha", "Arriba", "Abajo", "Todo" }));

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        lblComentarios.setText("Comentarios");

        btnAgregar.setText("Agregar");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel2Layout = new org.jdesktop.layout.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel2Layout.createSequentialGroup()
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(jLabel3)
                            .add(lblProblema)
                            .add(jLabel4)
                            .add(lblComentarios))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jComboBox2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jComboBox1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(txtNumeroDeDiente, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 164, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jScrollPane1)))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel2Layout.createSequentialGroup()
                        .add(0, 0, Short.MAX_VALUE)
                        .add(btnAgregar)))
                .add(30, 30, 30))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel3)
                    .add(txtNumeroDeDiente, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(lblProblema)
                    .add(jComboBox1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel4)
                    .add(jComboBox2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(lblComentarios)
                    .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 109, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(18, 18, 18)
                .add(btnAgregar)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Fecha", "Diente", "Problema", "Lado", "Comentarios"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTable1MousePressed(evt);
            }
        });
        jScrollPane2.setViewportView(jTable1);

        org.jdesktop.layout.GroupLayout jPanel3Layout = new org.jdesktop.layout.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 0, Short.MAX_VALUE)
            .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(org.jdesktop.layout.GroupLayout.TRAILING, jScrollPane2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 697, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 134, Short.MAX_VALUE)
            .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(jPanel3Layout.createSequentialGroup()
                    .add(jScrollPane2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 134, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(0, 0, Short.MAX_VALUE)))
        );

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        btnInsertar.setText("Guardar Cambios");
        btnInsertar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertarActionPerformed(evt);
            }
        });

        btnLimpiar.setText("Limpiar");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });

        btnLimpiar1.setText("Quitar Selecionado");
        btnLimpiar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiar1ActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                        .add(layout.createSequentialGroup()
                            .add(lblExpediente, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(24, 24, 24)
                            .add(jPanel2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addContainerGap())
                        .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPanel3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                                .add(btnLimpiar)
                                .add(33, 33, 33)
                                .add(btnLimpiar1)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .add(btnInsertar)
                                .add(18, 18, 18)
                                .add(btnCancelar)))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(jPanel2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(lblExpediente, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(18, 18, 18)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(btnCancelar)
                    .add(btnInsertar)
                    .add(btnLimpiar)
                    .add(btnLimpiar1))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnInsertarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertarActionPerformed
        int nRow = model.getRowCount();
        Dentadura BAC = new Dentadura();
        for (int i = 0; i < nRow; i++) {
                BAC.AgregarDiente(Integer.parseInt(model.getValueAt(i,0).toString()),model.getValueAt(i,1).toString(),model.getValueAt(i,2).toString(),model.getValueAt(i,3).toString());
        }
        //A.VerDentadura();
        Gson gson = new Gson();
	String jsonInString = gson.toJson(BAC);
        Odonto OD = new Odonto();
        try {
            if(actualiza==0){
                if(OD.Guardar(Pa.Correo,jsonInString)==1){
                    JOptionPane.showMessageDialog(null,"Odontograma Guardado");
                    dispose();
                }else{
                    JOptionPane.showMessageDialog(null,"Error al guardar");
                }
            }else{
                if(OD.Actualiza(Pa.Correo,jsonInString).equals("1")){
                    JOptionPane.showMessageDialog(null,"Odontograma Actualizado");
                    dispose();
                }else{
                    JOptionPane.showMessageDialog(null,"Error al guardar");
                }
            }
            //System.out.println(jsonInString);
            //Dentadura B = gson.fromJson(jsonInString, Dentadura.class);
            //B.VerDentadura();
        } catch (SQLException ex) {
            Logger.getLogger(OdontogramaVista.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnInsertarActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        dispose();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        String numeroDeDiente = txtNumeroDeDiente.getText();
        String problema = jComboBox1.getSelectedItem().toString();
        String lado = jComboBox2.getSelectedItem().toString();
        String comentarios = jTextArea1.getText();
        String caso[] = {numeroDeDiente, problema, lado, comentarios};
        if(numeroDeDiente.matches("-?\\d+")){
            int num = Integer.parseInt(numeroDeDiente);
            if(between(num,11,18) || between(num, 21, 28) || between(num, 51,55) || between(num,61,65) || between(num,81,85)){
                model.addRow(caso);
                A.AgregarDiente(Integer.parseInt(numeroDeDiente), problema, lado, comentarios);
            }else{
                if(between(num,71,75) || between(num, 41, 48) || between(num, 31,38)){
                    model.addRow(caso);
                    A.AgregarDiente(Integer.parseInt(numeroDeDiente), problema, lado, comentarios);
                }else{
                   JOptionPane.showMessageDialog(null,"Numero de diente invalido");
                }
            }
        }else{
            JOptionPane.showMessageDialog(null,"Numero de diente invalido");
        }
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        model.setRowCount(0);
        A=new Dentadura();
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked

    }//GEN-LAST:event_jTable1MouseClicked

    private void jTable1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MousePressed
        /*
        Point point = evt.getPoint();
        int i = jTable1.rowAtPoint(point);
        if (evt.getClickCount() == 2 && jTable1.getSelectedRow() != -1) {
            JOptionPane.showMessageDialog(null,""
                + "Diente: "+(i+1)+"\n"
                + "Problema: "+A.Problema(i)+"\n"
                + "Lado: "+A.Lado(i)+"\n"
                + "Comentarios: "+A.Comentario(i)+"\n");
        }
        */
        int nRow = model.getRowCount();
        A = new Dentadura();
        for (int i = 0; i < nRow; i++) {
                A.AgregarDiente(Integer.parseInt(model.getValueAt(i,0).toString()),model.getValueAt(i,1).toString(),model.getValueAt(i,2).toString(),model.getValueAt(i,3).toString());
        }
        Point point = evt.getPoint();
        int i = jTable1.rowAtPoint(point);
        if (evt.getModifiers() == MouseEvent.BUTTON3_MASK){
            JOptionPane.showMessageDialog(null,""
                + "Diente: "+(i+1)+"\n"
                + "Problema: "+A.Problema(i)+"\n"
                + "Lado: "+A.Lado(i)+"\n"
                + "Comentarios: "+A.Comentario(i)+"\n");
        }
    }//GEN-LAST:event_jTable1MousePressed

    private void txtNumeroDeDienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNumeroDeDienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNumeroDeDienteActionPerformed

    private void btnLimpiar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiar1ActionPerformed
    ((DefaultTableModel)jTable1.getModel()).removeRow(jTable1.getSelectedRow());
    int nRow = model.getRowCount();
        A = new Dentadura();
        for (int i = 0; i < nRow; i++) {
                A.AgregarDiente(Integer.parseInt(model.getValueAt(i,0).toString()),model.getValueAt(i,1).toString(),model.getValueAt(i,2).toString(),model.getValueAt(i,3).toString());
        }
    
    }//GEN-LAST:event_btnLimpiar1ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel NOMBREPACIENTE;
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnInsertar;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JButton btnLimpiar1;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JLabel lblComentarios;
    private javax.swing.JPanel lblExpediente;
    private javax.swing.JLabel lblPaciente;
    private javax.swing.JLabel lblProblema;
    private javax.swing.JTextField txtNumeroDeDiente;
    // End of variables declaration//GEN-END:variables
}
